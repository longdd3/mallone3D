{"id":"js/customPass.js","dependencies":[{"name":"D:\\Web Development\\mallone3D\\package.json","includedInParent":true,"mtime":1680117085946},{"name":"three","loc":{"line":3,"column":10,"index":33},"parent":"D:\\Web Development\\mallone3D\\src\\js\\customPass.js","resolved":"D:\\Web Development\\mallone3D\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Aberration = void 0;\nvar _three = require(\"three\");\n/**\r\n * Dot screen shader\r\n * based on glfx.js sepia shader\r\n * https://github.com/evanw/glfx.js\r\n */\nvar Aberration = {\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'distort': {\n      value: 0.5\n    },\n    'time': {\n      value: 0\n    }\n  },\n  vertexShader: /* glsl */\"\\n    varying vec2 vUv;\\n    void main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n    }\",\n  fragmentShader: /* glsl */\"\\n    uniform vec2 center;\\n    uniform float angle;\\n    uniform float time;\\n    uniform float progress;\\n    uniform float scale;\\n    uniform vec2 tSize;\\n    uniform sampler2D tDiffuse;\\n    varying vec2 vUv;\\n    uniform sampler2D tInput;\\n    uniform vec2 resolution;\\n\\n\\n    const float max_distort = 1.                       ;\\n    const int num_iter = 12;\\n    const float reci_num_iter_f = 1.0 / float(num_iter);\\n\\n\\n    vec2 barrelDistortion(vec2 coord, float amt) {\\n        vec2 cc = coord - 0.5;\\n        float dist = dot(cc, cc);\\n        return coord + cc * dist * amt;\\n    }\\n    \\n    float sat( float t )\\n    {\\n        return clamp( t, 0.0, 1.0 );\\n    }\\n    \\n    float linterp( float t ) {\\n        return sat( 1.0 - abs( 2.0*t - 1.0 ) );\\n    }\\n    \\n    float remap( float t, float a, float b ) {\\n        return sat( (t - a) / (b - a) );\\n    }\\n    \\n    vec4 spectrum_offset( float t ) {\\n        vec4 ret;\\n        float lo = step(t,0.5);\\n        float hi = 1.0-lo;\\n        float w = linterp( remap( t, 1.0/6.0, 5.0/6.0 ) );\\n        ret = vec4(lo,1.0,hi, 1.) * vec4(1.0-w, w, 1.0-w, 1.);\\n    \\n        return pow( ret, vec4(1.0/2.2) );\\n    }\\n    \\n \\n    \\n    void main()\\n    {\\t\\n        vec2 zUV=(vUv - vec2(0.5))*0.95 + vec2(0.5);\\n \\n        vec4 sumcol = vec4(0.0);\\n        vec4 sumw = vec4(0.0);\\t\\n        for ( int i=0; i<num_iter;++i )\\n        {\\n            float t = float(i) * reci_num_iter_f;\\n            vec4 w = spectrum_offset( t );\\n            sumw += w;\\n            sumcol += w * texture2D( tDiffuse, barrelDistortion(zUV, .2 * max_distort*t ) );\\n        }\\n            \\n   \\n        gl_FragColor = sumcol / sumw;\\n    }\\n   \\n    \"\n};\nexports.Aberration = Aberration;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"js/customPass.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"js/customPass.js","original":{"line":1,"column":0},"name":"_three"},{"generated":{"line":7,"column":10},"source":"js/customPass.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":13},"source":"js/customPass.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":20},"source":"js/customPass.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"js/customPass.js","original":{"line":4,"column":3}},{"generated":{"line":9,"column":0},"source":"js/customPass.js","original":{"line":5,"column":0}},{"generated":{"line":10,"column":0},"source":"js/customPass.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"js/customPass.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"js/customPass.js","original":{"line":8,"column":0}},{"generated":{"line":13,"column":0},"source":"js/customPass.js","original":{"line":9,"column":7}},{"generated":{"line":13,"column":4},"source":"js/customPass.js","original":{"line":9,"column":11},"name":"Aberration"},{"generated":{"line":13,"column":14},"source":"js/customPass.js","original":{"line":9,"column":21}},{"generated":{"line":13,"column":17},"source":"js/customPass.js","original":{"line":9,"column":24}},{"generated":{"line":14,"column":2},"source":"js/customPass.js","original":{"line":10,"column":4},"name":"uniforms"},{"generated":{"line":14,"column":10},"source":"js/customPass.js","original":{"line":10,"column":12}},{"generated":{"line":14,"column":12},"source":"js/customPass.js","original":{"line":10,"column":14}},{"generated":{"line":15,"column":4},"source":"js/customPass.js","original":{"line":11,"column":4}},{"generated":{"line":15,"column":14},"source":"js/customPass.js","original":{"line":11,"column":14}},{"generated":{"line":15,"column":16},"source":"js/customPass.js","original":{"line":11,"column":16}},{"generated":{"line":16,"column":6},"source":"js/customPass.js","original":{"line":11,"column":18},"name":"value"},{"generated":{"line":16,"column":11},"source":"js/customPass.js","original":{"line":11,"column":23}},{"generated":{"line":16,"column":13},"source":"js/customPass.js","original":{"line":11,"column":25}},{"generated":{"line":17,"column":4},"source":"js/customPass.js","original":{"line":11,"column":30}},{"generated":{"line":17,"column":5},"source":"js/customPass.js","original":{"line":11,"column":31}},{"generated":{"line":18,"column":4},"source":"js/customPass.js","original":{"line":12,"column":4}},{"generated":{"line":18,"column":13},"source":"js/customPass.js","original":{"line":12,"column":13}},{"generated":{"line":18,"column":15},"source":"js/customPass.js","original":{"line":12,"column":15}},{"generated":{"line":19,"column":6},"source":"js/customPass.js","original":{"line":12,"column":16},"name":"value"},{"generated":{"line":19,"column":11},"source":"js/customPass.js","original":{"line":12,"column":21}},{"generated":{"line":19,"column":13},"source":"js/customPass.js","original":{"line":12,"column":23}},{"generated":{"line":20,"column":4},"source":"js/customPass.js","original":{"line":12,"column":26}},{"generated":{"line":20,"column":5},"source":"js/customPass.js","original":{"line":12,"column":27}},{"generated":{"line":21,"column":4},"source":"js/customPass.js","original":{"line":13,"column":4}},{"generated":{"line":21,"column":10},"source":"js/customPass.js","original":{"line":13,"column":10}},{"generated":{"line":21,"column":12},"source":"js/customPass.js","original":{"line":13,"column":12}},{"generated":{"line":22,"column":6},"source":"js/customPass.js","original":{"line":13,"column":13},"name":"value"},{"generated":{"line":22,"column":11},"source":"js/customPass.js","original":{"line":13,"column":18}},{"generated":{"line":22,"column":13},"source":"js/customPass.js","original":{"line":13,"column":20}},{"generated":{"line":23,"column":4},"source":"js/customPass.js","original":{"line":13,"column":21}},{"generated":{"line":24,"column":2},"source":"js/customPass.js","original":{"line":15,"column":4}},{"generated":{"line":24,"column":3},"source":"js/customPass.js","original":{"line":15,"column":5}},{"generated":{"line":25,"column":2},"source":"js/customPass.js","original":{"line":16,"column":4},"name":"vertexShader"},{"generated":{"line":25,"column":14},"source":"js/customPass.js","original":{"line":16,"column":16}},{"generated":{"line":25,"column":16},"source":"js/customPass.js","original":{"line":16,"column":18}},{"generated":{"line":25,"column":171},"source":"js/customPass.js","original":{"line":21,"column":6}},{"generated":{"line":26,"column":2},"source":"js/customPass.js","original":{"line":22,"column":4},"name":"fragmentShader"},{"generated":{"line":26,"column":16},"source":"js/customPass.js","original":{"line":22,"column":18}},{"generated":{"line":26,"column":18},"source":"js/customPass.js","original":{"line":22,"column":20}},{"generated":{"line":27,"column":0},"source":"js/customPass.js","original":{"line":90,"column":3}},{"generated":{"line":27,"column":1},"source":"js/customPass.js","original":{"line":90,"column":4}},{"generated":{"line":28,"column":0},"source":"js/customPass.js","original":{"line":90,"column":5},"name":"exports"},{"generated":{"line":28,"column":7},"source":"js/customPass.js","original":{"line":90,"column":5}},{"generated":{"line":28,"column":8},"source":"js/customPass.js","original":{"line":90,"column":5},"name":"Aberration"},{"generated":{"line":28,"column":18},"source":"js/customPass.js","original":{"line":90,"column":5}},{"generated":{"line":28,"column":21},"source":"js/customPass.js","original":{"line":90,"column":5},"name":"Aberration"},{"generated":{"line":28,"column":31},"source":"js/customPass.js","original":{"line":90,"column":5}}],"sources":{"js/customPass.js":"import {\r\n    Vector2\r\n   } from 'three';\r\n   /**\r\n    * Dot screen shader\r\n    * based on glfx.js sepia shader\r\n    * https://github.com/evanw/glfx.js\r\n    */\r\nexport let Aberration = {\r\n    uniforms: {\r\n    'tDiffuse': { value: null },\r\n    'distort': {value: 0.5},   \r\n    'time': {value: 0},\r\n  \r\n    },\r\n    vertexShader: /* glsl */`\r\n    varying vec2 vUv;\r\n    void main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n    fragmentShader: /* glsl */`\r\n    uniform vec2 center;\r\n    uniform float angle;\r\n    uniform float time;\r\n    uniform float progress;\r\n    uniform float scale;\r\n    uniform vec2 tSize;\r\n    uniform sampler2D tDiffuse;\r\n    varying vec2 vUv;\r\n    uniform sampler2D tInput;\r\n    uniform vec2 resolution;\r\n\r\n\r\n    const float max_distort = 1.                       ;\r\n    const int num_iter = 12;\r\n    const float reci_num_iter_f = 1.0 / float(num_iter);\r\n\r\n\r\n    vec2 barrelDistortion(vec2 coord, float amt) {\r\n        vec2 cc = coord - 0.5;\r\n        float dist = dot(cc, cc);\r\n        return coord + cc * dist * amt;\r\n    }\r\n    \r\n    float sat( float t )\r\n    {\r\n        return clamp( t, 0.0, 1.0 );\r\n    }\r\n    \r\n    float linterp( float t ) {\r\n        return sat( 1.0 - abs( 2.0*t - 1.0 ) );\r\n    }\r\n    \r\n    float remap( float t, float a, float b ) {\r\n        return sat( (t - a) / (b - a) );\r\n    }\r\n    \r\n    vec4 spectrum_offset( float t ) {\r\n        vec4 ret;\r\n        float lo = step(t,0.5);\r\n        float hi = 1.0-lo;\r\n        float w = linterp( remap( t, 1.0/6.0, 5.0/6.0 ) );\r\n        ret = vec4(lo,1.0,hi, 1.) * vec4(1.0-w, w, 1.0-w, 1.);\r\n    \r\n        return pow( ret, vec4(1.0/2.2) );\r\n    }\r\n    \r\n \r\n    \r\n    void main()\r\n    {\t\r\n        vec2 zUV=(vUv - vec2(0.5))*0.95 + vec2(0.5);\r\n \r\n        vec4 sumcol = vec4(0.0);\r\n        vec4 sumw = vec4(0.0);\t\r\n        for ( int i=0; i<num_iter;++i )\r\n        {\r\n            float t = float(i) * reci_num_iter_f;\r\n            vec4 w = spectrum_offset( t );\r\n            sumw += w;\r\n            sumcol += w * texture2D( tDiffuse, barrelDistortion(zUV, .2 * max_distort*t ) );\r\n        }\r\n            \r\n   \r\n        gl_FragColor = sumcol / sumw;\r\n    }\r\n   \r\n    `\r\n   };\r\n "},"lineCount":null}},"error":null,"hash":"884755eae27d9dfdbcee9505229acc03","cacheData":{"env":{}}}