{"id":"M7Wb","dependencies":[{"name":"D:\\Web Development\\mallone3D\\package.json","includedInParent":true,"mtime":1680117085946},{"name":"D:\\Web Development\\mallone3D\\node_modules\\three\\package.json","includedInParent":true,"mtime":1680117024254},{"name":"three","loc":{"line":6,"column":7,"index":85},"parent":"D:\\Web Development\\mallone3D\\node_modules\\three\\examples\\jsm\\postprocessing\\Pass.js","resolved":"D:\\Web Development\\mallone3D\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pass = exports.FullScreenQuad = void 0;\nvar _three = require(\"three\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar Pass = /*#__PURE__*/function () {\n  function Pass() {\n    _classCallCheck(this, Pass);\n    // if set to true, the pass is processed by the composer\n    this.enabled = true;\n\n    // if set to true, the pass indicates to swap read and write buffer after rendering\n    this.needsSwap = true;\n\n    // if set to true, the pass clears its buffer before rendering\n    this.clear = false;\n\n    // if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n    this.renderToScreen = false;\n  }\n  _createClass(Pass, [{\n    key: \"setSize\",\n    value: function setSize( /* width, height */) {}\n  }, {\n    key: \"render\",\n    value: function render( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */\n    ) {\n      console.error('THREE.Pass: .render() must be implemented in derived pass.');\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {}\n  }]);\n  return Pass;\n}(); // Helper for passes that need to fill the viewport with a single quad.\nexports.Pass = Pass;\nvar _camera = new _three.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nvar _geometry = new _three.BufferGeometry();\n_geometry.setAttribute('position', new _three.Float32BufferAttribute([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3));\n_geometry.setAttribute('uv', new _three.Float32BufferAttribute([0, 2, 0, 0, 2, 0], 2));\nvar FullScreenQuad = /*#__PURE__*/function () {\n  function FullScreenQuad(material) {\n    _classCallCheck(this, FullScreenQuad);\n    this._mesh = new _three.Mesh(_geometry, material);\n  }\n  _createClass(FullScreenQuad, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._mesh.geometry.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.render(this._mesh, _camera);\n    }\n  }, {\n    key: \"material\",\n    get: function get() {\n      return this._mesh.material;\n    },\n    set: function set(value) {\n      this._mesh.material = value;\n    }\n  }]);\n  return FullScreenQuad;\n}();\nexports.FullScreenQuad = FullScreenQuad;"},"sourceMaps":null,"error":null,"hash":"d88ebecbf380d8c1a9596c5d05b84693","cacheData":{"env":{}}}